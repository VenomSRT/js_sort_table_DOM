{"version":3,"sources":["scripts/main.js"],"names":["peopleContainer","document","querySelector","people","children","tableHeader","addEventListener","event","sorter","index","tableRows","rowsContainer","sort","row1","row2","innerText","forEach","elem","append","slice","split","join","localeCompare","target","cellIndex"],"mappings":";AAAA,aASA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EALA,IAAMA,EAAkBC,SAASC,cAAc,SACzCC,EAAaH,EAAAA,EAAgBI,UAE7BC,EAAcJ,SAASC,cAAc,SAE3CG,EAAYC,iBAAiB,QAAS,SAACC,IAC5BC,SAAOC,EAAOC,EAAWC,GACxBF,OAAAA,GACD,KAAA,EACHC,EAAUE,KAAK,SAACC,EAAMC,GACb,OAAED,EAAKT,SAASK,GAAOM,WAC1BD,EAAKV,SAASK,GAAOM,YACxBC,QAAQ,SAAAC,GAAQN,OAAAA,EAAcO,OAAOD,KACxC,MAEG,KAAA,EACHP,EAAUE,KAAK,SAACC,EAAMC,GACb,OAAED,EAAKT,SAASK,GAAOM,UAC3BI,MAAM,GACNC,MAAM,KACNC,KAAK,KACJP,EAAKV,SAASK,GAAOM,UACtBI,MAAM,GACNC,MAAM,KACNC,KAAK,MACPL,QAAQ,SAAAC,GAAQN,OAAAA,EAAcO,OAAOD,KACxC,MAEG,KAAA,EACA,KAAA,EACL,QACEP,EAAUE,KAAK,SAACC,EAAMC,GACZD,OAAAA,EAAKT,SAASK,GAAOM,UAAWO,cACtCR,EAAKV,SAASK,GAAOM,aAEtBC,QAAQ,SAAAC,GAAQN,OAAAA,EAAcO,OAAOD,MAK9CT,CAAOD,EAAMgB,OAAOC,UAAWrB,EAAQH","file":"main.5f0891f3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\n\nconst peopleContainer = document.querySelector('tbody');\nconst people = [...peopleContainer.children];\n\nconst tableHeader = document.querySelector('thead');\n\ntableHeader.addEventListener('click', (event) => {\n  function sorter(index, tableRows, rowsContainer) {\n    switch (index) {\n      case 2:\n        tableRows.sort((row1, row2) => {\n          return +(row1.children[index].innerText)\n          - +(row2.children[index].innerText);\n        }).forEach(elem => rowsContainer.append(elem));\n        break;\n\n      case 3:\n        tableRows.sort((row1, row2) => {\n          return +(row1.children[index].innerText\n            .slice(1)\n            .split(',')\n            .join(''))\n          - +(row2.children[index].innerText\n            .slice(1)\n            .split(',')\n            .join(''));\n        }).forEach(elem => rowsContainer.append(elem));\n        break;\n\n      case 0:\n      case 1:\n      default:\n        tableRows.sort((row1, row2) => {\n          return (row1.children[index].innerText).localeCompare(\n            row2.children[index].innerText\n          );\n        }).forEach(elem => rowsContainer.append(elem));\n        break;\n    };\n  };\n\n  sorter(event.target.cellIndex, people, peopleContainer);\n});\n"]}